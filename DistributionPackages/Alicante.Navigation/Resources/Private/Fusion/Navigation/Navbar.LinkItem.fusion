prototype(Alicante.Navigation:Navbar.LinkItem) < prototype(Neos.Fusion:Component) {
    node                = ${ node }
    linkItemClass 		= ${ 'block whitespace-nowrap' + ' ' + (item.state == 'active' ? 'text-primary activeLink' : item.state == 'current' ? ' text-primary activeLink' : 'text-base-300 hover:text-primary duration-200') }
    lastLinkItemClass 	= ${ 'block whitespace-nowrap' + ' ' + (item.state == 'active' ? 'text-primary activeLink' : item.state == 'current' ? ' text-primary' : 'text-base-300 hover:text-primary duration-200') }
    nodeType 			= ${ item.node.nodetype.name }
    linkTarget 			= ${ this.nodeType == 'Neos.Neos:Shortcut' && item.node.properties.linktarget ? '_blank' : false }
    doNotLinkNode       = ${ q(documentNode).property('doNotLink') }
    hasSubItems         = ${ item.subItems ? 'subs' : 'no Subs' }
    anchorLinks         = ''

    @context {
        node = ${ this.node }
    }

    renderer = afx`
        <button class="items-center justify-between focus:outline-none">

            <!-- Regular Link -->
            <Neos.Neos:NodeLink 
                @if.isRegularLink={props.doNotLinkNode ? false : true }
                @if.isAnchorLink={props.anchorLinks ? false : true }
                node={item.node}
                attributes.class={i.isLast ? props.lastLinkItemClass : props.linkItemClass}
                attributes.target={props.linkTarget}
                renderDefaultTagIfNoLink={false}
            >
                { q(item.node).property('titleOverride') ? q(item.node).property('titleOverride') : q(item.node).property('title') }
            </Neos.Neos:NodeLink>

            <!-- Not linked, for structure -->
            <Neos.Neos:NodeLink 
                @if.isNotLinked={props.doNotLinkNode ? true : false }
                @if.isAnchorLink={props.anchorLinks ? false : true }
                link={'#'}
                attributes.class={ i.isLast ? props.lastLinkItemClass : props.linkItemClass }
                attributes.target={props.linkTarget}
                renderDefaultTagIfNoLink={false}
            >
                { q(item.node).property('title') }
            </Neos.Neos:NodeLink>

            <!-- Anchor Links for Products -->
            <a 
                @if.isAnchorLink={props.anchorLinks ? true : false }
                href={ '#id-' + q(item.node).property('_nodeName') }
                class={ i.isLast ? props.lastLinkItemClass : props.linkItemClass }
            >
                { q(item.node).property('title') }
            </a>

            <!-- <Alicante.Navigation:Navbar.MegaMenuIndicator /> -->
        </button>

    `
    // @if.hasSubs=${ !item.subItems }
    // @if.hasMegaMenu=${ !Array.first(q(item.node).find('[instanceof Alicante.Navigation:Document.MegaMenu]')) }
}


// prototype(Alicante.Navigation:Navbar.LinkItemWithSub) < prototype(Neos.Fusion:Component) {
//     linkItemClass 		= ${ 'block whitespace-nowrap ' + ' ' + (item.state == 'active' ? 'text-primary-focus active' : item.state == 'current' ? 'text-primary-focus active' : '') }
//     nodeType 			= ${ item.node.nodetype.name}
//     linkTarget 			= ${ this.nodeType == 'Neos.Neos:Shortcut' && item.node.properties.linktarget ? '_blank' : false}
//     hasSubItems         = ${ item.subItems ? 'subs' : 'no Subs' }

//     renderer = afx`
//         <div 
//             class="group"
//         >
//             <div>
//                 <button 
//                     type="button" 
//                     class="relative flex items-center h-24 focus:outline-none" 
//                     aria-expanded="false"
//                 >
//                     <Neos.Neos:NodeLink 
//                         @if.isNoShortcutWithSubsites={ q(item.node).is('[instanceof !Neos.Neos:Shortcut]') }
//                         node={doNotLinkNode ? '#' : item.node} 
//                         attributes.class={props.linkItemClass}
//                         attributes.target={props.linkTarget}
//                     >
//                         { q(item.node).property('title') }
//                     </Neos.Neos:NodeLink>
//                     <a 
//                         @if.isShortcutWithSubsites={ q(item.node).is('[instanceof Neos.Neos:Shortcut]') }
//                         href="javascript:void();"
//                         class={ props.linkItemClass }
//                     >
//                         { q(item.node).property('title') }
//                     </a>
//                     <!-- <Alicante.Navigation:Navbar.MegaMenuIndicator /> -->
//                 </button>
//                 <Alicante.Navigation:Navbar.SubItems 
//                     @if.isNotHidden={ q(item.node).property('hideSubPages') ? false : true }
//                 />
//             </div>
//         </div>
//     `

//     // @if.hasSubs=${ item.subItems }
//     // @if.hasMegaMenu=${ !Array.first(q(item.node).find('[instanceof Alicante.Navigation:Document.MegaMenu]')) }

// }


// prototype(Alicante.Navigation:Navbar.MegaMenuItem) < prototype(Neos.Fusion:Component) {

//     linkItemClass 		= ${ 'block whitespace-nowrap ' + ' ' + (item.state == 'active' ? 'active text-primary-focus' : item.state == 'current' ? 'active text-primary-focus' : '') }

//     renderer = afx`
//         <div 
//             x-data="\{ megaMenu: false \}" 
//             "@click"="megaMenu = true"
//         >
//             <div
//                 "@click.away.debounce.50"="megaMenu = false"
//             >
//                 <button 
//                     type="button" 
//                     class="relative flex items-center h-24 group focus:outline-none" 
//                     aria-expanded="false"
//                 >

//                     <Neos.Neos:NodeLink 
//                         @if.isNoShortcutWithSubsites={ q(item.node).is('[instanceof !Neos.Neos:Shortcut]') }
//                         node={doNotLinkNode ? '#' : item.node} 
//                         attributes.class={props.linkItemClass}
//                         attributes.target={props.linkTarget}
//                     >
//                         { q(item.node).property('title') }
//                     </Neos.Neos:NodeLink>
//                     <a 
//                         @if.isShortcutWithSubsites={ q(item.node).is('[instanceof Neos.Neos:Shortcut]') }
//                         href="javascript:void();"
//                         class={ props.linkItemClass }
//                     >
//                         { q(item.node).property('title') }
//                     </a>                

//                     <Alicante.Navigation:Navbar.MegaMenuIndicator />

//                 </button>
//                 <Neos.Fusion:Loop items={item.subItems} iterationName="i">
//                     <div class="container"
//                         @if.isFirst={i.isFirst}
//                     >
//                         <Alicante.Navigation:Navbar.MegaMenu node={item.node} />
//                     </div>
//                 </Neos.Fusion:Loop>
//             </div>
//         </div>

//     `
//     @if.hasMegaMenu=${ q(item.node).find('[instanceof Alicante.Navigation:Document.MegaMenu]').get(0) }
// }


// prototype(Alicante.Navigation:Navbar.MegaMenuIndicator) < prototype(Neos.Fusion:Component) {
//     renderer = afx`
//         <div class="absolute -bottom-[16px] z-50 inline-block w-16 -ml-2 overflow-hidden left-1/2"
//             :class="megaMenu ? 'block' : 'hidden'"
//         >
//             <!-- :class="megaMenu ? 'block' : 'hidden'" -->
//             <div class="w-4 h-4 origin-bottom-left transform rotate-45 bg-white"></div>
//         </div>
//     `
// }