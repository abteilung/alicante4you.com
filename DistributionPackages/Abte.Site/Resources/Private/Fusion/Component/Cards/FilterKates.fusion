prototype(Abte.Site:Component.FilterKates) < prototype(Neos.Fusion:Component) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }

    renderer = Neos.Fusion:Join {
        @glue = ','

        newsKate = ${ q(documentNode).is('[uriPathSegment="news-and-trends"]') ? Carbon.String.urlize( q(node).parent('[instanceof Abte.Site:Document.Category]').parent().property('title') ) + '-' + Carbon.String.urlize( q(node).parent('[instanceof Abte.Site:Document.Category]').property('title') ) : null }
        newsKate.@process.tmpl = ${ '\'' + value + '\'' }
        newsKate.@if.isNews = ${ q(documentNode).is('[uriPathSegment="news-and-trends"]') }

        categories = Neos.Fusion:Loop {
            @glue = ','
            @if.hasItems = ${ q(node).property('categories') }

            items = Neos.Fusion:Map {
                items = ${ q(node).property('categories') }
                itemRenderer = ${ q(item).get(0) }
                @process.removeDuplicates = ${Array.unique(value)}
            }

            iterationName = 'i'
            itemName = 'pcat'
            itemRenderer = ${ q(pcat).parent('[instanceof Abte.Site:Document.Category]') ? '\'' + Carbon.String.urlize(q(pcat).parent().property('title')) + '-' + Carbon.String.urlize(q(pcat).property('title')) + '\'' : '\'' + Carbon.String.urlize(q(pcat).parent().property('title')) + '-' + Carbon.String.urlize(q(pcat).property('title')) + '\'' }
        } 

        parentCategory = Neos.Fusion:Loop {
            @glue = ','
            @if.hasItems = ${ q(node).property('categories') }
            items = Neos.Fusion:Map {
                items = ${ q(node).property('categories') }
                itemRenderer = ${ q(item).parent().get(0) }
                @process.removeDuplicates = ${Array.unique(value)}
            }

            itemName = 'pcat'
            itemRenderer = ${ '\'' + Carbon.String.urlize(q(pcat).parent().property('title')) + '-' + Carbon.String.urlize(q(pcat).property('title')) + '\'' }
        }
        all = '\'all\''
    }
    @process.tmpl = ${ '[' + value + '].includes(cat)' }

}