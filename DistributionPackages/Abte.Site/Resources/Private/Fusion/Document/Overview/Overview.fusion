prototype(Abte.Site:Document.Overview) < prototype(Abte.Site:Document.AbstractPage) {
    body.content = Neos.Fusion:Component {
        
        two = afx`
            <div class="grid h-full grid-cols-1 p-8 place-content-between">
                <h3 class="self-start">xxx<br/><span class="text-primary-focus">xxx</span></h3>
                <div class="self-end">
                    <Abte.Site:Component.DropdownMenu 
                        itemCollection={ q(node).parent().find('[instanceof Abte.Site:Document.Kurs]').get() ? q(node).parent().find('[instanceof Abte.Site:Document.Kurs]').get() : q(node).get() }
                        label={ q(node).parent().find('[instanceof Abte.Site:Document.Kurs]').get() ? I18n.translate('Abte.Site:Main:currentCourses') : I18n.translate('Abte.Site:Main:noCourses') }
                    />
                </div>
            </div>    
        `

        three = ''

        four = ''

        five = ''

        oneTheme = ${ q(documentNode).is('[uriPathSegment="buy-real-estate"]') ? 'buy' : 'sell' }

        renderer = afx`
            <main class="main">
                <div class="container gridPadding-x">
                    <Abte.Site:Component.HeaderGrid 
                        oneTheme={ props.oneTheme }
                        oneClass='roundedCorners relative bg-primary col-span-1 md:col-span-2 headGrid'
                        two={props.two}
                        twoClass='roundedCorners overflow-hidden relative bg-base-100'
                    />
                </div>
                {props.main}
            </main>
        `
    }
}


prototype(Abte.Site:Document.GridItemRenderer) < prototype(Neos.Fusion:Component) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }

    renderer = Neos.Fusion:Case {
        isStory {
            condition = ${ q(node).is('[instanceof Abte.Site:Document.Kompetenz],[instanceof Abte.Site:Document.Story]') }
            renderer = Abte.Site:Component.ServiceCard
        }
        isProduct {
            condition = ${ q(node).is('[instanceof Abte.Site:Document.Product],[instanceof Abte.Site:Document.ProductLink]') }
            renderer = Abte.Site:Component.ImageCard {
                class = "relative w-full h-full group block"
                category=${ q( q(node).property('categories') ).property('title') }
            }
        }
        fallback {
            condition = ${ true }
            renderer = 'Not a Story'
        }
    }
}