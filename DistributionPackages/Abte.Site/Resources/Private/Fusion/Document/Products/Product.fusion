prototype(Abte.Site:Document.Product) < prototype(Abte.Site:Document.AbstractPage) {

    // Overriding Conditions from Jonnitto for Maps rendering
    head.googleMaps = Neos.Fusion:Tag {
        @if.render = ${ true }
    }

    body.javascripts {
        googleMapsFunction = Neos.Fusion:Tag {
            @if.render = ${ true }
        }
        googleMapsApi = Neos.Fusion:Tag {
            @if.render = ${ true }
        }
        googleMapsBackend = Neos.Fusion:Tag {
            @if.render = ${ true }
        }
    }



    body.content = Neos.Fusion:Component {

        filterItemsArray = ${ q(node).property('categories') ? q(node).property('categories') : null }
        @context {
            filterItemsArray = ${ this.filterItemsArray }
        }

        description = Neos.Neos:Editable {
            property = 'description'
            @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                @position = 'end'
            }
        }

        title = ${ q(node).property('title') }
        
        address = ${ q(node).property('address') }

        floorPlans = ${ q(node).property('floorPlans') }

        similarProducts = ${ q(node).property('categories') ? q(documentNode).parent().children('[instanceof Abte.Site:Mixin.Product]').filterByReference( Array.last( q(node).property('categories') ), 'categories' ).remove(documentNode).get() : null }

        features = Abte.Site:Component.ProductFeatures

        renderer = afx`

            <div class="space-y-12">
                <div class="container ">
                    <main class="mx-auto space-y-4 md:space-y-8 lg:w-2/3">

                        {props.main}

                        <Abte.Site:Content.Container 
                            id="id-features"
                            title={ I18n.translate('Abte.Site:Main:features') }
                            linkText=''
                            link=''
                            contentClass='productTable'
                        >
                            {props.features}
                        </Abte.Site:Content.Container>


                        <Abte.Site:Content.Container 
                            id="id-description"
                            title={ I18n.translate('Abte.Site:Main:description') }
                            linkText=''
                            link=''
                            contentClass='lead'
                        >
                            {props.description}
                        </Abte.Site:Content.Container>


                        <Abte.Site:Content.Container 
                            @if.hasFloorplans={props.floorPlans}
                            id="id-floor-plans"
                            title={ I18n.translate('Abte.Site:Main:floorPlans') }
                            linkText=''
                            link=''
                        >
                            <Abte.Site:Content.Tabs firstTab="1">
                                <Neos.Fusion:Loop items={props.floorPlans} iterator="i" tabCollection={props.floorPlans}>
                                    <Abte.Site:Content.Tab tab_title="xxx" tabId={i.cycle} />
                                </Neos.Fusion:Loop>
                            </Abte.Site:Content.Tabs>
                        </Abte.Site:Content.Container>


                        <Abte.Site:Content.Container 
                            id="id-location"
                            title={ I18n.translate('Abte.Site:Main:location') }
                            linkText=''
                            link=''
                        >
                            <Jonnitto.GoogleMaps:Map 
                                mapLocation={props.address}
                                zoom="12"
                                showInfo={true}
                                title={props.title}
                                showinfo="true"
                                maptype="terrain"
                            />
                        </Abte.Site:Content.Container>


                        <Abte.Site:Content.Container 
                            id="id-distances"
                            title={ I18n.translate('Abte.Site:Main:distances') }
                            linkText=''
                            link=''
                            @if.hasDistance={ node.context.inBackend || q(node).property('atm') || q(node).property('train') || q(node).property('bus') || q(node).property('postbox') || q(node).property('road') || q(node).property('school') }
                        >
                            <div class="grid grid-cols-3 md:grid-cols-5 gridgap">
                                <Abte.Site:Content.PropertyFeature textProperty='atm' featureIcon='atm' title="ATM" />
                                <Abte.Site:Content.PropertyFeature textProperty='train' featureIcon='train' title="Railway" />
                                <Abte.Site:Content.PropertyFeature textProperty='bus' featureIcon='bus' title="Bus" />
                                <Abte.Site:Content.PropertyFeature textProperty='postbox' featureIcon='postbox' title="Postal Office" />
                                <Abte.Site:Content.PropertyFeature textProperty='road' featureIcon='road' title="Motorway" />
                                <Abte.Site:Content.PropertyFeature textProperty='school' featureIcon='school' title="School" />
                            </div>
                        </Abte.Site:Content.Container>

                    </main>


                    <Abte.Site:Content.Container 
                        @if.hasSimilarProducts={props.similarProducts}
                        title={ I18n.translate('Abte.Site:Main:similarProducts') }
                        linkText=''
                        link=''
                    >
                        <Abte.Site:Content.Navigation 
                            node={node}
                            navigationItems={props.similarProducts}
                            limit="4" 
                            layout="products" 
                        />
                    </Abte.Site:Content.Container>


                </div>
            </div>
        `

        @cache {
            mode = 'cached'
            entryIdentifier {
                node = ${node}
            }
            entryTags {
                1 = ${Neos.Caching.nodeTypeTag('Abte.Site:Document.Product', documentNode)}
                // 1 = ${Neos.Caching.nodeTag(node)}
                2 = ${Neos.Caching.nodeTag(filterItemsArray)}
                3 = ${Neos.Caching.descendantOfTag(filterItemsArray)}
            }
        }    
    }
}


prototype(Abte.Site:Component.ProductFeatures) < prototype(Neos.Neos:ContentComponent) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }

    listOfProps = Neos.Fusion:DataStructure {
        rooms = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_rooms' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:rooms') }
            content = Neos.Neos:Editable {
                property = 'prop_rooms'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
            }
        }
        baths = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_baths' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:baths') }
            content = Neos.Neos:Editable {
                property = 'prop_baths'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
            }
        }
        toilets = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_toilets' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:toilets') }
            content = Neos.Neos:Editable {
                property = 'prop_toilets'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
            }
        }    
        year = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_year' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:year') }
            content = Neos.Neos:Editable {
                property = 'prop_year'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
            }
        }                
        property = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_property' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:property') }
            content = Neos.Neos:Editable {
                property = 'prop_property'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ '' + value + ' m<sup>2</sup>' }
            }
        }   

        living = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_living' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:living') }
            content = Neos.Neos:Editable {
                property = 'prop_living'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ '' + value + ' m<sup>2</sup>' }
            }
        }   
        parking = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_parking' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:parking') }
            content = Neos.Neos:Editable {
                property = 'prop_parking'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ '' + value + '' }
            }
        }   
        price = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_price' )}
            @glue = ${'</td><td class="font-bold text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:price') }
            content = Neos.Neos:Editable {
                property = 'prop_price'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ 'EUR ' + value + '' }
            }
        }                   
    }

    renderer = afx`
        <table class="">
            <Neos.Fusion:Loop items={props.listOfProps} iterationName='i'>
                <tr>
                    <td class={i.isLast ? 'font-bold' : null}>{item}</td>
                </tr>
            </Neos.Fusion:Loop>
        </table>
    `
}


prototype(Abte.Site:Component.ProductFeaturesShort) < prototype(Neos.Neos:ContentComponent) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }

    listOfProps = Neos.Fusion:DataStructure {
        rooms = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_rooms' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:rooms') }
            content = Neos.Neos:Editable {
                property = 'prop_rooms'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
            }
        }
        property = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_property' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:property') }
            content = Neos.Neos:Editable {
                property = 'prop_property'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ '' + value + ' m<sup>2</sup>' }
            }
        }   
        living = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_living' )}
            @glue = ${'</td><td class="text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:living') }
            content = Neos.Neos:Editable {
                property = 'prop_living'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ '' + value + ' m<sup>2</sup>' }
            }
        }   
        price = Neos.Fusion:Join {
            @if.hasContent=${ node.context.inBackend || q(node).property('prop_price' )}
            @glue = ${'</td><td class="font-bold text-right">'}
            label = ${ I18n.translate('Abte.Site:Main:price') }
            content = Neos.Neos:Editable {
                property = 'prop_price'
                block = ${ false }
                @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
                    @position = 'end'
                }
                @process.template = ${ 'EUR ' + value + '' }
            }
        }                   
    }

    renderer = afx`
        <table class="shortTable">
            <Neos.Fusion:Loop items={props.listOfProps} iterationName='i'>
                <tr>
                    <td class={i.isLast ? 'font-bold' : null}>{item}</td>
                </tr>
            </Neos.Fusion:Loop>
        </table>
    `
}