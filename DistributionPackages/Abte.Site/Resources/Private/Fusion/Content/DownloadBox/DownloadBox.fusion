prototype(Abte.Site:Content.DownloadBoxContent) < prototype(Neos.Neos:ContentComponent) {
   
    title = Neos.Neos:Editable {
        property = 'title'
    }
   
    subTitle = Neos.Neos:Editable {
        property = 'subTitle'
    }
   
    imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
        asset   = ${ q(documentNode).closest('[instanceof Abte.Site:Document.World]').property('downloadImagePlaceholder') }
    }

    icon = Abte.Site:Icon.Download {
        class = 'absolute z-10 duration-150 scale-75 text-accent bottom-6 lg:scale-100 right-8 group-hover:bottom-4'
    }

    renderer = afx`
        <div class="">
            <div 
                class="flex flex-wrap w-full space-y-6 text-base bg-white cursor-pointer group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:w-auto sm:inline-flex"
            >
                <div class="overflow-hidden">
                    <Sitegeist.Kaleidoscope:Image 
                        imageSource={props.imageSource} 
                        class="duration-300 scale-105 group-hover:scale-100 aspect-tv"
                    />
                </div>
                <div class="relative w-full px-6 pb-6 md:px-4 lg:px-6">
                    <p class="text-base-300">{props.subTitle}</p>
                    <h3>{props.title}</h3>
                    <p>{props.link}</p>
                    <div class="flex items-center justify-between text-primary">
                        { I18n.translate('Abte.Site:Main:downloadPDF') }
                    </div>
                        {props.icon}
                </div>
            </div>
        </div>
    `
}

prototype(Abte.Site:Content.DownloadBox) < prototype(Neos.Fusion:Component) {

    renderer = Alicante.Navigation:Component.DisplayCondition {
        content = Neos.Fusion:Tag {
            tagName = 'a'
            attributes {
                class = 'relative block w-full h-full duration-150 bg-white shadow-2xl ce-downloadBox mix group hover:shadow-lg'
                href = Neos.Fusion:ResourceUri {
                    resource = ${ q(node).property('download_link').resource }
                    @if.isFrontend=${ !node.context.inBackend }
                }

                target = '_blank'
            }

            content = Abte.Site:Content.DownloadBoxContent
        }
    }

}
