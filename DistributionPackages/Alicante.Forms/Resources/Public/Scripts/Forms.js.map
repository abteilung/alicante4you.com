{
  "version": 3,
  "sources": ["../../Private/Fusion/Forms.js"],
  "sourcesContent": ["// import Choices from 'choices.js'; \n\nconst orderItems = document.getElementById('formOrder');\nwindow.choices = new Choices(orderItems, {\n    // maxItems: 20,\n    delimiter: ',',\n    addItems: true,\n    editItems: false,\n    maxItemCount: -1,\n    removeItems: true,\n    removeItemButton: true,\n    duplicateItemsAllowed: false,\n    // initialize choices with values of local storage\n    items: localStorage.getItem('orderValue') ? (localStorage.getItem('orderValue').length ? localStorage.getItem('orderValue').split(',') : [] ) : []\n  });\n\n// event when choices removes or adds manually a element to choices object / modified input field\norderItems.addEventListener(\n  'change',\n  function(event) {\n    localStorage.setItem('orderValue', document.getElementById('formOrder').value);\n  },\n  false,\n);\n\norderItems.addEventListener(\n  'removeItem',\n  function(id, value, label, customProperties, groupValue){\n    let event = new CustomEvent('item-removed', {\n      element: {\n        id: id,\n        value: value,\n        label: label,\n        groupValue: groupValue,\n        customProperties: customProperties\n      }\n    });\n    window.dispatchEvent(event);\n  },\n  false,\n);\n\n// event when Alpine adds an item (over button) to the input layer beneth choices and dispaches an event\nwindow.addEventListener('item-added', function(e){\n  var title = document.querySelector('h1 .productTitle').innerText.replace(/,\\s*/g, '-'),\n      formOrder = document.getElementById('formOrder').value;\n\n    // console.log(title);\n    // console.log(formOrder);\n    // console.log(localStorage.getItem('orderValue'));\n      \n  if(!formOrder.split(',').includes(title) ){\n    window.choices.setValue([{\n      value: document.querySelector('h1 .productTitle').innerText.replace(/,\\s*/g, '-'),\n      label: document.querySelector('h1 .productTitle').innerText.replace(/,\\s*/g, '-'),\n      customProperties: {\n        theme: document.body.dataset.theme || 'default'\n      }\n    }]);\n  }\n\n});\n\n// choices.setValue([{\n//         value: document.getElementsByTagName('h1')[0].innerText || document.title,\n//         label: document.getElementsByTagName('h1')[0].innerText || document.title,\n//         customProperties: {\n//           theme: document.body.dataset.theme || 'default'\n//         }\n//       }]);\n\n// choices.setValue([{\n//   value: document.getElementsByTagName('h1')[0].innerText || document.title,\n//   label: document.getElementsByTagName('h1')[0].innerText || document.title,\n//   customProperties: {\n//     theme: document.body.dataset.theme || 'default'\n//   }\n// }]);\n\n\n// const element = document.querySelector('#select');\n// const choices = new Choices(element);\n\n// choices.setChoices([\n//   {label:'Choice 1', value:'1'},\n//   {label:'Choice 2', value:'2'},\n//   {label:'Choice 3', value:'3', selected:true},\n// ], undefined, undefined, true);\n\n// choices.setChoices([\n//   {label:'Choice 1', value:'1'},\n//   {label:'Choice 2', value:'2', selected:true},\n//   {label:'Choice 3', value:'3'},\n// ], undefined, undefined, true);\n\n// var secondElement = new Choices('#choosenOnes', { allowSearch: true }).setValue(['Set value 1', 'Set value 2']);\n\n// const element = document.getElementById('order-form-order')\n// const example = new Choices(element, {\n//     choices: [\n//       { value: 'One', label: 'Label One' },\n//       { value: 'Two', label: 'Label Two', disabled: true },\n//       { value: 'Three', label: 'Label Three' },\n//     ],\n//   });\n  \n// example.setChoiceByValue('Two'); // Choice with value of 'Two' has now been selected.\n\n//   // Pass reference\n//   const choices = new Choices('[data-trigger]');\n//   const choices = new Choices('#order-form-order');\n\n// document.getElementById('order-form-order').choices.setValue([{value: 2, label: \"Two\"}]\n\n// var elChoice = document.querySelector('#order-form-order');\n// var choicesInstance = Choices(elChoice);\n// choicesInstance.setValue(['Set value 1', 'Set value 2']);\n\n//   if (document.querySelector('.cart-add-itemxxxx')) {\n//     Array.from(document.querySelectorAll('.cart-add-item')).forEach(\n//       element => new Choices(element, {\n//         search: false,\n//         itemSelectText: '',\n//         shouldSort: false\n//       }));\n//   }\n  \n//   // Passing options (with default options)\n//   const choices = new Choices(element, {\n//     silent: false,\n//     items: [],\n//     choices: [],\n//     renderChoiceLimit: -1,\n//     maxItemCount: -1,\n//     addItems: true,\n//     addItemFilter: null,\n//     removeItems: true,\n//     removeItemButton: false,\n//     editItems: false,\n//     allowHTML: true,\n//     duplicateItemsAllowed: true,\n//     delimiter: ',',\n//     paste: true,\n//     searchEnabled: true,\n//     searchChoices: true,\n//     searchFloor: 1,\n//     searchResultLimit: 4,\n//     searchFields: ['label', 'value'],\n//     position: 'auto',\n//     resetScrollPosition: true,\n//     shouldSort: true,\n//     shouldSortItems: false,\n//     placeholder: true,\n//     placeholderValue: null,\n//     searchPlaceholderValue: null,\n//     prependValue: null,\n//     appendValue: null,\n//     renderSelectedChoices: 'auto',\n//     loadingText: 'Loading...',\n//     noResultsText: 'No results found',\n//     noChoicesText: 'No choices to choose from',\n//     itemSelectText: 'Press to select',\n//     addItemText: (value) => {\n//       return `Press Enter to add <b>\"${value}\"</b>`;\n//     },\n//     maxItemText: (maxItemCount) => {\n//       return `Only ${maxItemCount} values can be added`;\n//     },\n//     valueComparer: (value1, value2) => {\n//       return value1 === value2;\n//     },\n//     classNames: {\n//       containerOuter: 'choices',\n//       containerInner: 'choices__inner',\n//       input: 'choices__input',\n//       inputCloned: 'choices__input--cloned',\n//       list: 'choices__list',\n//       listItems: 'choices__list--multiple',\n//       listSingle: 'choices__list--single',\n//       listDropdown: 'choices__list--dropdown',\n//       item: 'choices__item',\n//       itemSelectable: 'choices__item--selectable',\n//       itemDisabled: 'choices__item--disabled',\n//       itemChoice: 'choices__item--choice',\n//       placeholder: 'choices__placeholder',\n//       group: 'choices__group',\n//       groupHeading: 'choices__heading',\n//       button: 'choices__button',\n//       activeState: 'is-active',\n//       focusState: 'is-focused',\n//       openState: 'is-open',\n//       disabledState: 'is-disabled',\n//       highlightedState: 'is-highlighted',\n//       selectedState: 'is-selected',\n//       flippedState: 'is-flipped',\n//       loadingState: 'is-loading',\n//       noResults: 'has-no-results',\n//       noChoices: 'has-no-choices'\n//     },\n//     // Choices uses the great Fuse library for searching. You\n//     // can find more options here: https://fusejs.io/api/options.html\n//     fuseOptions: {\n//       includeScore: true\n//     },\n//     labelId: '',\n//     callbackOnInit: null,\n//     callbackOnCreateTemplates: null\n//   });\n"],
  "mappings": ";;AAEA,MAAM,aAAa,SAAS,eAAe,WAAW;AACtD,SAAO,UAAU,IAAI,QAAQ,YAAY;AAAA,IAErC,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,uBAAuB;AAAA,IAEvB,OAAO,aAAa,QAAQ,YAAY,IAAK,aAAa,QAAQ,YAAY,EAAE,SAAS,aAAa,QAAQ,YAAY,EAAE,MAAM,GAAG,IAAI,CAAC,IAAM,CAAC;AAAA,EACnJ,CAAC;AAGH,aAAW,iBACT,UACA,SAAS,OAAO;AACd,iBAAa,QAAQ,cAAc,SAAS,eAAe,WAAW,EAAE,KAAK;AAAA,EAC/E,GACA,KACF;AAEA,aAAW,iBACT,cACA,SAAS,IAAI,OAAO,OAAO,kBAAkB,YAAW;AACtD,QAAI,QAAQ,IAAI,YAAY,gBAAgB;AAAA,MAC1C,SAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO,cAAc,KAAK;AAAA,EAC5B,GACA,KACF;AAGA,SAAO,iBAAiB,cAAc,SAAS,GAAE;AAC/C,QAAI,QAAQ,SAAS,cAAc,kBAAkB,EAAE,UAAU,QAAQ,SAAS,GAAG,GACjF,YAAY,SAAS,eAAe,WAAW,EAAE;AAMrD,QAAG,CAAC,UAAU,MAAM,GAAG,EAAE,SAAS,KAAK,GAAG;AACxC,aAAO,QAAQ,SAAS,CAAC;AAAA,QACvB,OAAO,SAAS,cAAc,kBAAkB,EAAE,UAAU,QAAQ,SAAS,GAAG;AAAA,QAChF,OAAO,SAAS,cAAc,kBAAkB,EAAE,UAAU,QAAQ,SAAS,GAAG;AAAA,QAChF,kBAAkB;AAAA,UAChB,OAAO,SAAS,KAAK,QAAQ,SAAS;AAAA,QACxC;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AAAA,EAEF,CAAC;",
  "names": []
}
